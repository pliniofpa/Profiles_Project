What is new in KD Reports 1.1
=============================

* KDReports::Report now inherits from QObject to simplify memory management; you can
  create report-specific item models as children of the report, and you can give a parent
  to the report for automatic deletion.

* Support for giving a QDomDocument to KDReports::Report, which
  allows to modify the QDomDocument before giving it to KDReports
   - loadFromXML( const QDomDocument& ) method

* Configurable color for the background color of the header generated by auto tables
   - header-background attribute in the <table> tag
   - AutoTableElement::setHeaderBackground( const QBrush& ) method

* Support for a "default font" for the report
   - font and pointsize attributes in the <report> tag
   - Report::setDefaultFont( const QFont& ) method

* Support for a "default font" for a header or footer
   - font and pointsize attributes in the <header> and <footer> tags
   - Header::setDefaultFont( const QFont& ) method

* Configurable distance between header/footer and report body
   - header-body-spacing and footer-body-spacing attributes in the <report> tag.
   - Report::setHeaderBodySpacing() and Report::setFooterBodySpacing() methods

* Other additions to <report> tag:
   - margin-top, margin-left, margin-bottom, margin-right: page margins

* Support for custom paper size (requires Qt-4.4.0 or later)
   - KDReports::Report::setPaperSize(size, unit)

* Table breaking (layouting tables over multiple pages horizontally, to avoid wrapping)
    - KDReports::Report::setTableBreakingEnabled( bool tableBreakingEnabled )
  Page order for table breaking is also configurable, with
    - KDReports::Report::setTableBreakingPageOrder( KDReports::Report::RightThenDown )

* Font scaling
    - KDReports::Report::scaleFontsBy(factor)

* Combining table breaking and font scaling to ensure the report fits into
  a number of pages
    - KDReports::Report::scaleTo( int numPagesHorizontally, int numPagesVertically )

* Support for scaling images using their height as the criteria instead of their width
    - height attribute for <image>, can be a number "500" (which means millimeters) or a percent like "50%"
    - KDReports::ImageElement::setHeight( qreal height, Unit unit = Millimeters );
    - fitToPage attribute for <image> (the value doesn't matter)
    - KDReports::ImageElement::setFitToPage to make it always fill the page as much as possible

* Auto tables now honour the following data roles from the item model they read from:
    - font (Qt::FontRole)
    - icon/image/pixmap (Qt::DecorationRole)
    - text color (Qt::ForegroundRole)
    - background color (Qt::BackgroundRole)
    - text alignment (Qt::TextAlignmentRole)

* Support for colored text in KDReports::TextElement
    - setTextColor(QColor) method
    - color="#......" attribute for the <text> element

* Performance improvements: inserting a PageCount variable would make the rest
  of the report creation much slower, due to relayouting after each change.
  Generally speaking, performance has greatly improved in most situations,
  due to internal separation between content document and layout document.

* Fix compilation with Qt-4.4

* Qt-4.2.x is no longer supported, you need at least Qt-4.3.0

* Fix linking with KDChart on Windows

* Made xml examples work standalone, using a resource file

